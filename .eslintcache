[{"C:\\Projects\\dManager\\test\\src\\redux\\reducers.js":"1","C:\\Projects\\dManager\\test\\src\\components\\navbar\\NavDrawer.js":"2","C:\\Projects\\dManager\\test\\src\\index.js":"3","C:\\Projects\\dManager\\test\\src\\components\\logmenu\\Logmenu.js":"4","C:\\Projects\\dManager\\test\\src\\components\\navbar\\Navbar.js":"5","C:\\Projects\\dManager\\test\\src\\App.js":"6","C:\\Projects\\dManager\\test\\src\\redux\\actions.js":"7"},{"size":980,"mtime":1606746315000,"results":"8","hashOfConfig":"9"},{"size":3249,"mtime":1606748563000,"results":"10","hashOfConfig":"9"},{"size":1955,"mtime":1606648767000,"results":"11","hashOfConfig":"9"},{"size":7197,"mtime":1606752425857,"results":"12","hashOfConfig":"9"},{"size":3071,"mtime":1606750256367,"results":"13","hashOfConfig":"9"},{"size":3635,"mtime":1606750359903,"results":"14","hashOfConfig":"9"},{"size":720,"mtime":1606746156000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1aae8x9",{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\dManager\\test\\src\\redux\\reducers.js",["31","32","33","34","35","36"],"C:\\Projects\\dManager\\test\\src\\components\\navbar\\NavDrawer.js",["37","38","39","40"],"import { connect } from 'react-redux';\n\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { setUserLoggedIn, setPageName, setLogmenuOpen, setNavdrawerOpen } from \"../../redux/actions\";\n\nimport firebase from 'firebase';\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: \"200px\",\n        flexShrink: \"0px\",\n    },\n    drawerPaper: {\n        width: \"240px\",\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n}));\n\nfunction NavDrawer({ setNavdrawerOpen, navdraweropen }) {\n    const classes = useStyles();\n\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={navdraweropen}\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <div className={classes.drawerHeader}>\n                <IconButton onClick={() => setNavdrawerOpen(false)}>\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            <List>\n                <ListItem button>\n                    <ListItemIcon>\n                        <MailIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={\"Mail Test\"} />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                <ListItem button>\n                    <ListItemIcon>\n                        <InboxIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={\"Inbox Test\"} />\n                </ListItem>\n            </List>\n        </Drawer>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        loggedin: state.loggedin,\n        logmenuopen: state.logmenuopen,\n        pagename: state.pagename,\n        navdraweropen: state.navdraweropen\n    }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    setUserLoggedIn: (newLoggedin) => {\n        dispatch(setUserLoggedIn(newLoggedin));\n    },\n    setPageName: (newPagename) => {\n        dispatch(setPageName(newPagename));\n    },\n    setLogmenuOpen: (newLogmenuopen) => {\n        dispatch(setLogmenuOpen(newLogmenuopen));\n    },\n    setNavdrawerOpen: (newNavdraweropen) => {\n        dispatch(setNavdrawerOpen(newNavdraweropen));\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavDrawer)\n","C:\\Projects\\dManager\\test\\src\\index.js",[],"C:\\Projects\\dManager\\test\\src\\components\\logmenu\\Logmenu.js",[],"C:\\Projects\\dManager\\test\\src\\components\\navbar\\Navbar.js",["41"],"C:\\Projects\\dManager\\test\\src\\App.js",["42","43","44","45"],"C:\\Projects\\dManager\\test\\src\\redux\\actions.js",[],{"ruleId":"46","severity":1,"message":"47","line":8,"column":13,"nodeType":"48","messageId":"49","endLine":8,"endColumn":19},{"ruleId":"46","severity":1,"message":"47","line":14,"column":13,"nodeType":"48","messageId":"49","endLine":14,"endColumn":19},{"ruleId":"46","severity":1,"message":"47","line":20,"column":13,"nodeType":"48","messageId":"49","endLine":20,"endColumn":19},{"ruleId":"46","severity":1,"message":"47","line":26,"column":13,"nodeType":"48","messageId":"49","endLine":26,"endColumn":19},{"ruleId":"46","severity":1,"message":"47","line":32,"column":13,"nodeType":"48","messageId":"49","endLine":32,"endColumn":19},{"ruleId":"46","severity":1,"message":"47","line":35,"column":13,"nodeType":"48","messageId":"49","endLine":35,"endColumn":19},{"ruleId":"50","severity":1,"message":"51","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":18},{"ruleId":"50","severity":1,"message":"54","line":8,"column":8,"nodeType":"52","messageId":"53","endLine":8,"endColumn":16},{"ruleId":"50","severity":1,"message":"55","line":10,"column":8,"nodeType":"52","messageId":"53","endLine":10,"endColumn":24},{"ruleId":"50","severity":1,"message":"56","line":21,"column":8,"nodeType":"52","messageId":"53","endLine":21,"endColumn":16},{"ruleId":"50","severity":1,"message":"57","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":17},{"ruleId":"50","severity":1,"message":"57","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":17},{"ruleId":"50","severity":1,"message":"58","line":65,"column":13,"nodeType":"52","messageId":"53","endLine":65,"endColumn":16},{"ruleId":"50","severity":1,"message":"59","line":73,"column":19,"nodeType":"52","messageId":"53","endLine":73,"endColumn":28},{"ruleId":"50","severity":1,"message":"60","line":74,"column":19,"nodeType":"52","messageId":"53","endLine":74,"endColumn":31},"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'firebase' is defined but never used.","'PropTypes' is defined but never used.","'uid' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used."]