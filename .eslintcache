[{"/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/index.js":"1","/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/App.js":"2","/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/components/navbar/Navbar.js":"3","/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/components/logmenu/Logmenu.js":"4","/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/reportWebVitals.js":"5","/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/components/navbar/NavDrawer.js":"6"},{"size":1429,"mtime":1606918335641,"results":"7","hashOfConfig":"8"},{"size":3780,"mtime":1606919251167,"results":"9","hashOfConfig":"8"},{"size":2751,"mtime":1606918361348,"results":"10","hashOfConfig":"8"},{"size":8317,"mtime":1606920961575,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1606482580430,"results":"12","hashOfConfig":"8"},{"size":2383,"mtime":1606911245313,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mq8xz2",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/index.js",[],"/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/App.js",["28","29"],"import Navbar from \"./components/navbar/Navbar\";\nimport NavDrawer from \"./components/navbar/NavDrawer\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { withStyles, withTheme } from \"@material-ui/core/styles\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport firebase from \"firebase\";\n\nconst styles = (theme) => ({\n  draweropen: {\n    padding: \"10px\",\n    position: \"fixed\",\n    width: \"calc(100% - 240px)\",\n    left: \"240px\",\n    transition: theme.transitions.create([\"left\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerclosed: {\n    padding: \"10px\",\n    position: \"fixed\",\n    width: \"100%\",\n    left: \"0px\",\n    transition: theme.transitions.create([\"left\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    let { history, location } = this.props;\n\n    this.state = {\n      loggedIn: false,\n      currentPage: \"Hub\",\n      drawerOpen: false,\n    };\n\n    history.listen((location, action) => {\n      switch (location.pathname.substring(1)) {\n        case \"\":\n          this.setState({ currentPage: \"Hub\" });\n          break;\n        case \"loadouts\":\n          this.setState({ currentPage: \"Loadouts\" });\n          break;\n        case \"vendors\":\n          this.setState({ currentPage: \"Vendors\" });\n          break;\n        default:\n          this.setState({ currentPage: \"Unknown Page\" });\n      }\n    });\n\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        var uid = user.uid;\n        var isAnonymous = user.isAnonymous;\n\n        if (isAnonymous) {\n          firebase\n            .auth()\n            .signInAnonymously()\n            .then(() => {\n              this.setState({ loggedIn: true });\n            });\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    switch (this.props.location.pathname.substring(1)) {\n      case \"\":\n        this.setState({ currentPage: \"Hub\" });\n        break;\n      case \"loadouts\":\n        this.setState({ currentPage: \"Loadouts\" });\n        break;\n      case \"vendors\":\n        this.setState({ currentPage: \"Vendors\" });\n        break;\n      default:\n        this.setState({ currentPage: \"Unknown Page\" });\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n\n    return (\n      <>\n        <NavDrawer\n          currentPage={this.state.currentPage}\n          loggedIn={this.state.loggedIn}\n          drawerOpen={this.state.drawerOpen}\n          setLoggedIn={(newLogState) =>\n            this.setState({ loggedIn: newLogState })\n          }\n          setDrawerOpen={(newDrawerState) =>\n            this.setState({ drawerOpen: newDrawerState })\n          }\n        />\n        <Navbar\n          currentPage={this.state.currentPage}\n          loggedIn={this.state.loggedIn}\n          drawerOpen={this.state.drawerOpen}\n          setLoggedIn={(newLogState) =>\n            this.setState({ loggedIn: newLogState })\n          }\n          setDrawerOpen={(newDrawerState) =>\n            this.setState({ drawerOpen: newDrawerState })\n          }\n        />\n\n        <div\n          className={\n            this.state.drawerOpen ? classes.draweropen : classes.drawerclosed\n          }\n          id=\"appcontent\"\n        >\n          <Switch>\n            <Route path=\"/\">\n              {`Logged In: ${this.state.loggedIn.toString()}`}\n            </Route>\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\nexport default withTheme(withStyles(styles)(withRouter(App)));\n","/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/components/navbar/Navbar.js",[],"/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/components/logmenu/Logmenu.js",[],"/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/reportWebVitals.js",[],"/Users/brandoncasamichana/Desktop/Programming/Projects/gManager/gManager/src/components/navbar/NavDrawer.js",["30","31","32","33","34","35","36","37"],"import { connect } from \"react-redux\";\n\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport firebase from \"firebase\";\nimport { Component } from \"react\";\n\nconst styles = (theme) => ({\n  drawer: {\n    position: \"absolute\",\n    width: 240,\n    flexShrink: \"0px\",\n  },\n  drawerPaper: {\n    width: 240,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n});\n\nclass NavDrawer extends Component {\n  render() {\n    const classes = this.props.classes;\n\n    let {\n      currentPage,\n      loggedIn,\n      drawerOpen,\n      setLoggedIn,\n      setDrawerOpen,\n    } = this.props;\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={drawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={() => setDrawerOpen(false)}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button>\n            <ListItemIcon>\n              <MailIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Mail Test\"} />\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem button>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Inbox Test\"} />\n          </ListItem>\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withStyles(styles)(NavDrawer);\n",{"ruleId":"38","severity":1,"message":"39","line":36,"column":20,"nodeType":"40","messageId":"41","endLine":36,"endColumn":28},{"ruleId":"38","severity":1,"message":"42","line":64,"column":13,"nodeType":"40","messageId":"41","endLine":64,"endColumn":16},{"ruleId":"38","severity":1,"message":"43","line":1,"column":10,"nodeType":"40","messageId":"41","endLine":1,"endColumn":17},{"ruleId":"38","severity":1,"message":"44","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":18},{"ruleId":"38","severity":1,"message":"45","line":8,"column":8,"nodeType":"40","messageId":"41","endLine":8,"endColumn":16},{"ruleId":"38","severity":1,"message":"46","line":10,"column":8,"nodeType":"40","messageId":"41","endLine":10,"endColumn":24},{"ruleId":"38","severity":1,"message":"47","line":19,"column":8,"nodeType":"40","messageId":"41","endLine":19,"endColumn":16},{"ruleId":"38","severity":1,"message":"48","line":46,"column":7,"nodeType":"40","messageId":"41","endLine":46,"endColumn":18},{"ruleId":"38","severity":1,"message":"49","line":47,"column":7,"nodeType":"40","messageId":"41","endLine":47,"endColumn":15},{"ruleId":"38","severity":1,"message":"50","line":49,"column":7,"nodeType":"40","messageId":"41","endLine":49,"endColumn":18},"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","'uid' is assigned a value but never used.","'connect' is defined but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'firebase' is defined but never used.","'currentPage' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used."]